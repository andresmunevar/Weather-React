{"version":3,"sources":["components/SearchBar.jsx","components/Toggle.jsx","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","components/About.jsx","components/Ciudad.jsx","containers/App.js","index.js"],"names":["SearchBar","onSearch","useState","city","setCity","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Toggle","className","Nav","to","process","Card","min","max","name","img","onClose","id","country","symbol","onClick","src","width","height","alt","Cards","cities","length","map","c","key","About","href","Ciudad","temp","weather","wind","clouds","latitud","longitud","console","log","apiKey","REACT_APP_API_KEY","App","setCities","isToggled","setToggled","oldCities","filter","handleCheckboxChange","ciudad","units","fetch","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","icon","speed","all","coord","lat","lon","sys","find","alert","onFilter","ciudadId","parseInt","path","render","exact","component","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.36be1553.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function SearchBar({onSearch}) {\n  const [city, setCity] = useState(\"\");\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      onSearch(city);\n    }}>\n      <input\n        type=\"text\"\n        placeholder=\"City...\"\n        value={city}\n        onChange={e => setCity(e.target.value)}\n      />\n      <input type=\"submit\" value=\"Add\" />\n    </form>\n  );\n}\n","import React from \"react\";\n\nexport default function Toggle({onChange}) {    \n    return (\n        <div className=\"symbol\">\n            <span>°C </span>\n            <label className=\"switch\">\n                <input type=\"checkbox\" onChange={(e) => onChange(e.target.value)}></input>\n                <span className=\"slider round\"></span>\n            </label>\n            <span> °F</span>\n        </div>\n    );\n}\n","import React from 'react';\nimport SearchBar from './SearchBar.jsx';\nimport Toggle from './Toggle.jsx';\nimport './Nav.css';\nimport { Link } from 'react-router-dom';\n\n\nfunction Nav({onSearch, onChange}) {  \n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <Link to={process.env.PUBLIC_URL + '/'}>\n        <span className=\"navbar-brand\">          \n          Weather App\n        </span>\n      </Link>\n      <Link to={process.env.PUBLIC_URL + '/about'}>\n        <span>About</span>\n      </Link>\n      <Toggle onChange={onChange} />\n      <SearchBar\n        onSearch={onSearch}\n      />\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport './Card.css';\nimport { Link } from 'react-router-dom';\n\nexport default function Card ({min, max, name, img, onClose, id, country, symbol}) {\n    return (\n      <div className=\"card\">\n        <div id=\"closeIcon\" className=\"row\">\n            <button onClick={onClose} className=\"btn btn-sm btn-danger\">X</button>\n        </div>\n        <div className=\"card-body\">\n          <Link to={process.env.PUBLIC_URL + `/ciudad/${id}`} >\n            <h5 className=\"card-title\">{name}, {country}</h5>\n          </Link>\n          <div className=\"row\">\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\n              <p>Min</p>\n              <p>{min} °{symbol}</p>\n            </div>\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\n              <p>Max</p>\n              <p>{max} °{symbol}</p>\n            </div>\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\n              <img className=\"iconoClima\" src={\"http://openweathermap.org/img/wn/\"+img+\"@2x.png\"} width=\"80\" height=\"80\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n};\n","import React from 'react';\nimport './Cards.css';\n\nimport Card from './Card.jsx';\n\nexport default function Cards({cities, onClose}) {\n  if(cities.length > 0){\n    return (\n      <div className='cards'>\n        {cities.map(c => <Card\n            key={c.id}\n            max={c.max}\n            min={c.min}\n            name={c.name}\n            img={c.img}\n            onClose={() => onClose(c.id)}\n            id={c.id}\n            country={c.country}\n            symbol={c.symbol}\n          /> )}\n      </div>\n    );\n  } else {\n    return (\n      <div>There are no cities</div>\n    )\n  }\n}\n","import React from 'react';\n//import { Link } from 'react-router-dom';\n\n\nfunction About({onSearch}) {\n  return (\n    <nav>\n        <span>         \n          <h2>ABOUT</h2>\n        </span>\n        <span>         \n          <div>Frontend App done with React using <a href='https://openweathermap.org/api'>https://openweathermap.org/api</a></div>\n          {/* <div>This app has a pre-loaded city which is Ubate because there is where my parents live. Feel free to close it!!!</div> */}\n          <div>Coded by Andres Munevar</div>\n        </span>\n    </nav>\n  );\n};\n\nexport default About;","import React from \"react\";\n\nexport default function Ciudad({city}) {    \n    return (\n        <div className=\"ciudad\">\n                <div className=\"container\">\n                    <h2>{city.name}</h2>\n                    <div className=\"info\">\n                        <div>Temperature: {city.temp} °{city.symbol}</div>\n                        <div>Weather: {city.weather}</div>\n                        <div>Wind: {city.wind} km/h</div>\n                        <div>Clouds: {city.clouds}</div>\n                        <div>Latitud: {city.latitud}º</div>\n                        <div>Longitud: {city.longitud}º</div>\n                    </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\nimport About from '../components/About.jsx';\nimport Ciudad from '../components/Ciudad.jsx';\n\nconsole.log(process.env.PUBLIC_URL);\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  const [isToggled, setToggled] = useState(false);\n  \n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function handleCheckboxChange(){\n    if(isToggled === false){\n      setToggled(true);\n    } else { \n      setToggled(false);\n    }\n\n  }\n\n  function onSearch(ciudad) {\n    var units = (isToggled === false) ? 'metric' : 'imperial';\n    var symbol = (units === 'metric') ? 'C' : 'F';\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&units=${units}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon,\n            country: recurso.sys.country,\n            symbol: symbol\n          };\n          if(!cities.find(city => city.id === ciudad.id)){\n            setCities(oldCities => [...oldCities, ciudad]);\n          } else { \n            alert(\"City already showed\");\n          }\n        } else {\n          alert(\"City not found\");\n        }\n      });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Route\n        path={process.env.PUBLIC_URL + '/'}\n        render={() => <Nav onSearch={onSearch} onChange={handleCheckboxChange}/>}\n      />\n      <Route\n        exact path={process.env.PUBLIC_URL + '/about'}\n        component={About}\n      />\n      <Route\n        exact path={process.env.PUBLIC_URL + '/'}\n        render={() => <Cards \n          cities={cities}\n          onClose={onClose}\n        /> }              \n      />\n      <Route  \n        exact path={process.env.PUBLIC_URL + '/ciudad/:ciudadId'}\n        render={({match}) => <Ciudad\n          city={onFilter(match.params.ciudadId)}\n        />}\n      />\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}